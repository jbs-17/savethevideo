---
import Layout from "../layouts/Layout.astro";
const { BACKEND } = process.env;
---

<Layout title="Register">
  <section class="min-h-[90vh] flex items-center justify-center bg-gray-200">
    <div class="w-full max-w-md bg-white rounded-lg shadow p-6">
      <h1 class="text-2xl font-extrabold mb-6 text-center">Register</h1>

      <form id="registerForm" class="space-y-4" novalidate>
        <!-- Email / Username -->
        <div>
          <label for="username" class="block text-sm font-medium text-gray-700"
            >Email / Phone</label
          >
          <input
            id="username"
            name="username"
            type="text"
            class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:ring-blue-500 focus:outline-none"
          />
          <p id="usernameError" class="text-sm text-red-600 mt-1 hidden"></p>
        </div>

        <!-- Password -->
        <div>
          <label for="password" class="block text-sm font-medium text-gray-700"
            >Password</label
          >
          <input
            id="password"
            name="password"
            type="text"
            class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:ring-blue-500 focus:outline-none"
          />
          <p id="passwordError" class="text-sm text-red-600 mt-1 hidden"></p>
        </div>

        <!-- Confirn Password -->
        <div>
          <label
            for="password-x"
            class="block text-sm font-medium text-gray-700"
            >Confirm Password</label
          >
          <input
            id="password-x"
            name="password-x"
            type="text"
            class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 text-sm focus:border-blue-500 focus:ring-blue-500 focus:outline-none"
          />
          <p id="passwordErrorx" class="text-sm text-red-600 mt-1 hidden"></p>
        </div>

        <!-- Remember Me -->
        <!-- <div class="flex items-center justify-between">
          <label class="flex items-center">
            <input
              type="checkbox"
              class="h-4 w-4 text-blue-600 border-gray-300 rounded"
            />
            <span class="ml-2 text-sm text-gray-600">Remember me</span>
          </label>
          <a
            href="/forgot-password"
            class="text-sm text-blue-600 hover:underline">Forgot password?</a
          >
        </div> -->

        <!-- Submit -->
        <button
          type="submit"
          class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium px-4 py-2 rounded-md lowercase"
        >
          Register
        </button>
      </form>

      <!-- Register Link -->
      <p class="mt-6 text-center text-sm text-gray-600">
        have an account?
        <a href="/login" class="text-blue-600 hover:underline">Login</a>
      </p>
    </div>
  </section>

  <!-- Client-side validation -->
  <data value={BACKEND} id="BACKEND"></data>
  <script>
    const BACKEND = document.getElementById("BACKEND").value;
    console.log({ BACKEND });
    document
      .getElementById("registerForm")
      .addEventListener("submit", function (e) {
        e.preventDefault();
        const username = document.getElementById("username");
        const password = document.getElementById("password");
        const passwordx = document.getElementById("password-x");
        const usernameError = document.getElementById("usernameError");
        const passwordError = document.getElementById("passwordError");
        const passwordErrorx = document.getElementById("passwordErrorx");

        let isValid = true;

        // Reset error states
        usernameError.classList.add("hidden");
        passwordError.classList.add("hidden");
        passwordErrorx.classList.add("hidden");

        // Username validation
        if (!username.value.trim()) {
          usernameError.textContent = "phone number or email required";
          usernameError.classList.remove("hidden");
          isValid = false;
        }

        // Password validation
        if (!password.value.trim() || !passwordx.value.trim()) {
          passwordError.textContent = "Password required";
          passwordErrorx.textContent = "Password required";
          passwordError.classList.remove("hidden");
          passwordErrorx.classList.remove("hidden");
          isValid = false;
        } else if (password.value.length < 4) {
          passwordError.textContent = "Password length minimun is 4 characters";
          passwordError.classList.remove("hidden");
          isValid = false;
        } else if (password.value.trim() !== passwordx.value.trim()) {
          passwordError.textContent = "Password and Confirmation not matched!";
          passwordErrorx.textContent = "Password and Confirmation not matched!";
          passwordError.classList.remove("hidden");
          passwordErrorx.classList.remove("hidden");
          isValid = false;
        }

        if (isValid) {
          // Jika valid, kirim form
          const identifier = username.value;
          const body = {
            password: password.value,
          };
          if (identifier?.includes("@")) {
            body.email = identifier;
          } else if (identifier?.includes("0")) {
            body.phone = identifier;
          } else {
            usernameError.textContent = 'invalid phone or email'
            usernameError.classList.remove("hidden");
            return;
          }

          (async () => {
            try {
              password?.setAttribute("dissable", "");
              const response = await fetch(
                BACKEND + "/savethevideo/api/user/register",
                {
                  method: "POST",
                  headers: { "Content-Type": "application/json" },
                  body: JSON.stringify(body),
                  credentials: "include",
                }
              );
              // const data = await response.json();
            } catch (error) {
              passwordError.textContent = error?.message?.includes("JSON")
                ? "internal server error"
                : (error?.message ?? "internal server error");
              passwordError.classList.remove("hidden");
              console.log(error);
            }
          })();
        }
      });
  </script>
</Layout>
